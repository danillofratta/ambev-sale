#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["Ambev.Sale.WebApi/Ambev.Sale.WebApi.csproj", "Ambev.Sale.WebApi/"]
COPY ["Ambev.Sale.Domain/Ambev.Sale.Core.Domain.csproj", "Ambev.Sale.Core.Domain/"]
COPY ["Ambev.Sale.Common/Ambev.Sale.Common.csproj", "Ambev.Sale.Common/"]
COPY ["Ambev.Sale.Core.Application/Ambev.Sale.Core.Application.csproj", "Ambev.Sale.Core.Application/"]
COPY ["Ambev.Sale.Infrastructure/Ambev.Sale.Infrastructure.csproj", "Ambev.Sale.Infrastructure/"]
RUN dotnet restore ".Ambev.Sale.WebApi/Ambev.Sale.WebApi.csproj"
COPY . .
WORKDIR "/src/Ambev.Sale.WebApi"
RUN dotnet build "./Ambev.Sale.WebApi.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./Ambev.Sale.WebApi.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Ambev.Sale.WebApi.dll"]